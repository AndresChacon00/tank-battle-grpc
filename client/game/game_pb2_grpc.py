# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import game_pb2 as game__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in game_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class GameServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpdateState = channel.unary_unary(
                '/game.GameService/UpdateState',
                request_serializer=game__pb2.PlayerState.SerializeToString,
                response_deserializer=game__pb2.GameState.FromString,
                _registered_method=True)
        self.GetGameState = channel.unary_unary(
                '/game.GameService/GetGameState',
                request_serializer=game__pb2.Empty.SerializeToString,
                response_deserializer=game__pb2.GameState.FromString,
                _registered_method=True)
        self.StreamGameState = channel.unary_stream(
                '/game.GameService/StreamGameState',
                request_serializer=game__pb2.Empty.SerializeToString,
                response_deserializer=game__pb2.GameState.FromString,
                _registered_method=True)
        self.AddBullet = channel.unary_unary(
                '/game.GameService/AddBullet',
                request_serializer=game__pb2.BulletState.SerializeToString,
                response_deserializer=game__pb2.Empty.FromString,
                _registered_method=True)
        self.RemoveBullet = channel.unary_unary(
                '/game.GameService/RemoveBullet',
                request_serializer=game__pb2.BulletRemoveRequest.SerializeToString,
                response_deserializer=game__pb2.Empty.FromString,
                _registered_method=True)
        self.SetMap = channel.unary_unary(
                '/game.GameService/SetMap',
                request_serializer=game__pb2.MapRequest.SerializeToString,
                response_deserializer=game__pb2.Empty.FromString,
                _registered_method=True)
        self.GetMap = channel.unary_unary(
                '/game.GameService/GetMap',
                request_serializer=game__pb2.Empty.SerializeToString,
                response_deserializer=game__pb2.MapResponse.FromString,
                _registered_method=True)
        self.AddPlayer = channel.unary_unary(
                '/game.GameService/AddPlayer',
                request_serializer=game__pb2.PlayerRequest.SerializeToString,
                response_deserializer=game__pb2.PlayerResponse.FromString,
                _registered_method=True)
        self.GetPlayerList = channel.unary_unary(
                '/game.GameService/GetPlayerList',
                request_serializer=game__pb2.Empty.SerializeToString,
                response_deserializer=game__pb2.PlayerList.FromString,
                _registered_method=True)
        self.StartGame = channel.unary_unary(
                '/game.GameService/StartGame',
                request_serializer=game__pb2.Empty.SerializeToString,
                response_deserializer=game__pb2.Empty.FromString,
                _registered_method=True)


class GameServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UpdateState(self, request, context):
        """Actualiza el estado del jugador y envia una actualizacion
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGameState(self, request, context):
        """Obtener estado del juego
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamGameState(self, request, context):
        """Devuelve actualizaciones en tiempo real
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddBullet(self, request, context):
        """Agregar una bala al servidor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveBullet(self, request, context):
        """Eliminar una bala del servidor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMap(self, request, context):
        """Establecer el mapa que se va a usar
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMap(self, request, context):
        """Obtener el mapa actual
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPlayer(self, request, context):
        """Añadir un método para agregar nuevos jugadores
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlayerList(self, request, context):
        """Obtener el listado de jugadores
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartGame(self, request, context):
        """Iniciar el juego (nuevo método)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GameServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpdateState': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateState,
                    request_deserializer=game__pb2.PlayerState.FromString,
                    response_serializer=game__pb2.GameState.SerializeToString,
            ),
            'GetGameState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGameState,
                    request_deserializer=game__pb2.Empty.FromString,
                    response_serializer=game__pb2.GameState.SerializeToString,
            ),
            'StreamGameState': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamGameState,
                    request_deserializer=game__pb2.Empty.FromString,
                    response_serializer=game__pb2.GameState.SerializeToString,
            ),
            'AddBullet': grpc.unary_unary_rpc_method_handler(
                    servicer.AddBullet,
                    request_deserializer=game__pb2.BulletState.FromString,
                    response_serializer=game__pb2.Empty.SerializeToString,
            ),
            'RemoveBullet': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveBullet,
                    request_deserializer=game__pb2.BulletRemoveRequest.FromString,
                    response_serializer=game__pb2.Empty.SerializeToString,
            ),
            'SetMap': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMap,
                    request_deserializer=game__pb2.MapRequest.FromString,
                    response_serializer=game__pb2.Empty.SerializeToString,
            ),
            'GetMap': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMap,
                    request_deserializer=game__pb2.Empty.FromString,
                    response_serializer=game__pb2.MapResponse.SerializeToString,
            ),
            'AddPlayer': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPlayer,
                    request_deserializer=game__pb2.PlayerRequest.FromString,
                    response_serializer=game__pb2.PlayerResponse.SerializeToString,
            ),
            'GetPlayerList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlayerList,
                    request_deserializer=game__pb2.Empty.FromString,
                    response_serializer=game__pb2.PlayerList.SerializeToString,
            ),
            'StartGame': grpc.unary_unary_rpc_method_handler(
                    servicer.StartGame,
                    request_deserializer=game__pb2.Empty.FromString,
                    response_serializer=game__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'game.GameService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('game.GameService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class GameService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UpdateState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/game.GameService/UpdateState',
            game__pb2.PlayerState.SerializeToString,
            game__pb2.GameState.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGameState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/game.GameService/GetGameState',
            game__pb2.Empty.SerializeToString,
            game__pb2.GameState.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamGameState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/game.GameService/StreamGameState',
            game__pb2.Empty.SerializeToString,
            game__pb2.GameState.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddBullet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/game.GameService/AddBullet',
            game__pb2.BulletState.SerializeToString,
            game__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveBullet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/game.GameService/RemoveBullet',
            game__pb2.BulletRemoveRequest.SerializeToString,
            game__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/game.GameService/SetMap',
            game__pb2.MapRequest.SerializeToString,
            game__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/game.GameService/GetMap',
            game__pb2.Empty.SerializeToString,
            game__pb2.MapResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddPlayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/game.GameService/AddPlayer',
            game__pb2.PlayerRequest.SerializeToString,
            game__pb2.PlayerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlayerList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/game.GameService/GetPlayerList',
            game__pb2.Empty.SerializeToString,
            game__pb2.PlayerList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/game.GameService/StartGame',
            game__pb2.Empty.SerializeToString,
            game__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
